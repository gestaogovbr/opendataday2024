"use strict";(self.webpackChunkipycanvas=self.webpackChunkipycanvas||[]).push([[901],{657:(e,t,s)=>{s.d(t,{Y:()=>i,o:()=>n});const a=s(147),i=a.version,n=a.name},901:(e,t,s)=>{s.r(t),s.d(t,{CanvasManagerModel:()=>y,CanvasModel:()=>k,CanvasView:()=>I,LinearGradientModel:()=>p,MultiCanvasModel:()=>S,MultiCanvasView:()=>P,Path2DModel:()=>b,PatternModel:()=>_,RadialGradientModel:()=>C,RoughCanvasModel:()=>x});var a,i=s(602),n=s(331),r=s(136),o=s(657);function l(e,t){switch(t.dtype){case"int8":return new Int8Array(e.buffer);case"uint8":return new Uint8Array(e.buffer);case"int16":return new Int16Array(e.buffer);case"uint16":return new Uint16Array(e.buffer);case"int32":return new Int32Array(e.buffer);case"uint32":return new Uint32Array(e.buffer);case"float32":return new Float32Array(e.buffer);case"float64":return new Float64Array(e.buffer);default:throw"Unknown dtype "+t.dtype}}!function(e){e.isScalar=function(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e}}(a||(a={}));class c{}class h extends c{constructor(e){super(),this.value=e,this.length=1/0}getItem(e){return this.value}}class d extends c{constructor(e,t){super(),this.value=l(t,e),this.length=this.value.length}getItem(e){return this.value[e]}}function u(e,t){if(a.isScalar(e))return new h(e);if(void 0!==e.idx)return new d(e,t[e.idx]);throw"Could not process argument "+e}async function g(e){const t=await async function(e){return new Promise(((t,s)=>{e.toBlob((e=>{if(null==e)return s("Unable to create blob");t(e)}))}))}(e);return new Promise(((e,s)=>{const a=new FileReader;a.onloadend=()=>{if("string"==typeof a.result||null==a.result)return s("Unable to read blob");const t=new Uint8ClampedArray(a.result);e(t)},a.readAsArrayBuffer(t)}))}function m(e){const t=e.getContext("2d");if(null===t)throw"Could not create 2d context.";return t}async function v(e){let t;const s=e.get("format"),a=e.get("value");if("url"!==s){const e=new Blob([a],{type:`image/${s}`});t=URL.createObjectURL(e)}else t=new TextDecoder("utf-8").decode(a.buffer);const i=new Image;return new Promise((e=>{i.onload=()=>{e(i)},i.src=t}))}const f=["fillRect","strokeRect","fillRects","strokeRects","clearRect","fillArc","fillCircle","strokeArc","strokeCircle","fillArcs","strokeArcs","fillCircles","strokeCircles","strokeLine","beginPath","closePath","stroke","fillPath","fill","moveTo","lineTo","rect","arc","ellipse","arcTo","quadraticCurveTo","bezierCurveTo","fillText","strokeText","setLineDash","drawImage","putImageData","clip","save","restore","translate","rotate","scale","transform","setTransform","resetTransform","set","clear","sleep","fillPolygon","strokePolygon","strokeLines","fillPolygons","strokePolygons","strokeLineSegments","fillStyledRects","strokeStyledRects","fillStyledCircles","strokeStyledCircles","fillStyledArcs","strokeStyledArcs","fillStyledPolygons","strokeStyledPolygons","strokeStyledLineSegments","switchCanvas"];class y extends n.WidgetModel{constructor(){super(...arguments),this.currentProcessing=Promise.resolve(),this.canvasesToUpdate=[]}defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:y.model_name,_model_module:y.model_module,_model_module_version:y.model_module_version})}initialize(e,t){super.initialize(e,t),this.on("msg:custom",((e,t)=>{this.currentProcessing=this.currentProcessing.then((async()=>{await this.onCommand(e,t)}))}))}async onCommand(e,t){const s=JSON.parse(i.Buffer.from(l(t[0],e)).toString("utf-8"));this.canvasesToUpdate=void 0!==this.currentCanvas?[this.currentCanvas]:[],await this.processCommand(s,t.slice(1,t.length));for(const e of this.canvasesToUpdate)e.syncViews()}async processCommand(e,t){if(e instanceof Array&&e[0]instanceof Array){let s=t;for(const t of e){let e=[];const a=t[2];a&&(e=s.slice(0,a),s=s.slice(a)),await this.processCommand(t,e)}return}const s=f[e[0]],a=e[1];switch(s){case"switchCanvas":await this.switchCanvas(a[0]),this.canvasesToUpdate.push(this.currentCanvas);break;case"sleep":await this.currentCanvas.sleep(a[0]);break;case"fillRect":this.currentCanvas.fillRect(a[0],a[1],a[2],a[3]);break;case"strokeRect":this.currentCanvas.strokeRect(a[0],a[1],a[2],a[3]);break;case"fillRects":this.currentCanvas.drawRects(a,t,this.currentCanvas.fillRect.bind(this.currentCanvas));break;case"strokeRects":this.currentCanvas.drawRects(a,t,this.currentCanvas.strokeRect.bind(this.currentCanvas));break;case"fillArc":this.currentCanvas.fillArc(a[0],a[1],a[2],a[3],a[4],a[5]);break;case"strokeArc":this.currentCanvas.strokeArc(a[0],a[1],a[2],a[3],a[4],a[5]);break;case"fillArcs":this.currentCanvas.drawArcs(a,t,this.currentCanvas.fillArc.bind(this.currentCanvas));break;case"strokeArcs":this.currentCanvas.drawArcs(a,t,this.currentCanvas.strokeArc.bind(this.currentCanvas));break;case"fillCircle":this.currentCanvas.fillCircle(a[0],a[1],a[2]);break;case"strokeCircle":this.currentCanvas.strokeCircle(a[0],a[1],a[2]);break;case"fillCircles":this.currentCanvas.drawCircles(a,t,this.currentCanvas.fillCircle.bind(this.currentCanvas));break;case"strokeCircles":this.currentCanvas.drawCircles(a,t,this.currentCanvas.strokeCircle.bind(this.currentCanvas));break;case"strokeLine":this.currentCanvas.strokeLine(a,t);break;case"strokeLines":this.currentCanvas.strokeLines(a,t);break;case"fillPolygon":this.currentCanvas.fillPolygon(a,t);break;case"strokePolygon":this.currentCanvas.strokePolygon(a,t);break;case"fillPath":await this.currentCanvas.fillPath(a,t);break;case"drawImage":await this.currentCanvas.drawImage(a,t);break;case"putImageData":await this.currentCanvas.putImageData(a,t);break;case"set":await this.currentCanvas.setAttr(a[0],a[1]);break;case"clear":this.currentCanvas.clearCanvas();break;case"fillPolygons":this.currentCanvas.drawPolygonOrLineSegments(a,t,!0,!0);break;case"strokePolygons":this.currentCanvas.drawPolygonOrLineSegments(a,t,!1,!0);break;case"strokeLineSegments":this.currentCanvas.drawPolygonOrLineSegments(a,t,!1,!1);break;case"fillStyledRects":this.currentCanvas.drawStyledRects(a,t,!0);break;case"strokeStyledRects":this.currentCanvas.drawStyledRects(a,t,!1);break;case"fillStyledCircles":this.currentCanvas.drawStyledCircles(a,t,!0);break;case"strokeStyledCircles":this.currentCanvas.drawStyledCircles(a,t,!1);break;case"fillStyledArcs":this.currentCanvas.drawStyledArcs(a,t,!0);break;case"strokeStyledArcs":this.currentCanvas.drawStyledArcs(a,t,!1);break;case"fillStyledPolygons":this.currentCanvas.drawStyledPolygonOrLineSegments(a,t,!0,!0);break;case"strokeStyledPolygons":this.currentCanvas.drawStyledPolygonOrLineSegments(a,t,!1,!0);break;case"strokeStyledLineSegments":this.currentCanvas.drawStyledPolygonOrLineSegments(a,t,!1,!1);break;default:this.currentCanvas.executeCommand(s,a)}}async switchCanvas(e){this.currentCanvas=await(0,n.unpack_models)(e,this.widget_manager)}}y.model_name="CanvasManagerModel",y.model_module=o.o,y.model_module_version=o.Y;class b extends n.WidgetModel{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:b.model_name,_model_module:b.model_module,_model_module_version:b.model_module_version,value:""})}initialize(e,t){super.initialize(e,t),this.value=new Path2D(this.get("value"))}}b.model_name="Path2DModel",b.model_module=o.o,b.model_module_version=o.Y;class _ extends n.WidgetModel{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:_.model_name,_model_module:_.model_module,_model_module_version:_.model_module_version,image:"",repetition:"repeat"})}async initialize(e,t){super.initialize(e,t);const s=this.get("image");let a;if((s instanceof k||s instanceof S)&&(a=s.canvas),"ImageModel"==s.get("_model_name")&&(a=await v(s)),null==a)throw"Could not understand the souce for the pattern";const i=_.ctx.createPattern(a,this.get("repetition"));if(null==i)throw"Could not initialize pattern object";this.value=i}}_.serializers=Object.assign(Object.assign({},n.WidgetModel.serializers),{image:{deserialize:n.unpack_models}}),_.model_name="PatternModel",_.model_module=o.o,_.model_module_version=o.Y,_.ctx=m(document.createElement("canvas"));class w extends n.WidgetModel{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_module:w.model_module,_model_module_version:w.model_module_version,x0:0,y0:0,x1:0,y1:0,color_stops:[]})}initialize(e,t){super.initialize(e,t),this.createGradient();for(const e of this.get("color_stops"))this.value.addColorStop(e[0],e[1])}createGradient(){this.value=w.ctx.createLinearGradient(this.get("x0"),this.get("y0"),this.get("x1"),this.get("y1"))}}w.model_module=o.o,w.model_module_version=o.Y,w.ctx=m(document.createElement("canvas"));class p extends w{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:p.model_name})}}p.model_name="LinearGradientModel";class C extends w{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:C.model_name,r0:0,r1:0})}createGradient(){this.value=w.ctx.createRadialGradient(this.get("x0"),this.get("y0"),this.get("r0"),this.get("x1"),this.get("y1"),this.get("r1"))}}C.model_name="RadialGradientModel";class k extends n.DOMWidgetModel{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:k.model_name,_model_module:k.model_module,_model_module_version:k.model_module_version,_view_name:k.view_name,_view_module:k.view_module,_view_module_version:k.view_module_version,width:700,height:500,sync_image_data:!1,image_data:null,_send_client_ready_event:!0})}initialize(e,t){super.initialize(e,t),this.canvas=document.createElement("canvas"),this.ctx=m(this.canvas),this.resizeCanvas(),this.drawImageData(),this.on_some_change(["width","height"],this.resizeCanvas,this),this.on("change:sync_image_data",this.syncImageData.bind(this)),this.get("_send_client_ready_event")&&this.send({event:"client_ready"},{})}async drawImageData(){if(null!==this.get("image_data")){const e=await async function(e){const t=new Blob([e]);return new Promise(((e,s)=>{const a=new Image;a.onload=()=>{e(a)},a.src=URL.createObjectURL(t)}))}(this.get("image_data"));this.ctx.drawImage(e,0,0),this.trigger("new-frame")}}async syncViews(){this.forEachView((e=>{e.updateCanvas()})),this.trigger("new-frame"),this.syncImageData()}async sleep(e){this.forEachView((e=>{e.updateCanvas()})),this.trigger("new-frame"),this.syncImageData(),await new Promise((t=>setTimeout(t,e)))}fillRect(e,t,s,a){this.ctx.fillRect(e,t,s,a)}strokeRect(e,t,s,a){this.ctx.strokeRect(e,t,s,a)}drawRects(e,t,s){const a=u(e[0],t),i=u(e[1],t),n=u(e[2],t),r=u(e[3],t),o=Math.min(a.length,i.length,n.length,r.length);for(let e=0;e<o;++e)s(a.getItem(e),i.getItem(e),n.getItem(e),r.getItem(e))}drawStyledRects(e,t,s){const a=u(e[0],t),i=u(e[1],t),n=u(e[2],t),r=u(e[3],t),o=u(e[4],t),l=u(e[5],t),c=Math.min(a.length,i.length,n.length,r.length);this.ctx.save();for(let e=0;e<c;++e){const t=3*e,c=`rgba(${o.getItem(t)}, ${o.getItem(t+1)}, ${o.getItem(t+2)}, ${l.getItem(e)})`;this.setStyle(c,s),s?this.fillRect(a.getItem(e),i.getItem(e),n.getItem(e),r.getItem(e)):this.strokeRect(a.getItem(e),i.getItem(e),n.getItem(e),r.getItem(e))}this.ctx.restore()}fillArc(e,t,s,a,i,n){this.ctx.beginPath(),this.ctx.moveTo(e,t),this.ctx.lineTo(e+s*Math.cos(a),t+s*Math.sin(a)),this.ctx.arc(e,t,s,a,i,n),this.ctx.lineTo(e,t),this.ctx.fill(),this.ctx.closePath()}strokeArc(e,t,s,a,i,n){this.ctx.beginPath(),this.ctx.arc(e,t,s,a,i,n),this.ctx.stroke(),this.ctx.closePath()}drawArcs(e,t,s){const a=u(e[0],t),i=u(e[1],t),n=u(e[2],t),r=u(e[3],t),o=u(e[4],t),l=u(e[5],t),c=Math.min(a.length,i.length,n.length,r.length,o.length);for(let e=0;e<c;++e)s(a.getItem(e),i.getItem(e),n.getItem(e),r.getItem(e),o.getItem(e),l.getItem(e))}fillCircle(e,t,s){this.ctx.beginPath(),this.ctx.arc(e,t,s,0,2*Math.PI),this.ctx.fill(),this.ctx.closePath()}strokeCircle(e,t,s){this.ctx.beginPath(),this.ctx.arc(e,t,s,0,2*Math.PI),this.ctx.stroke(),this.ctx.closePath()}drawCircles(e,t,s){const a=u(e[0],t),i=u(e[1],t),n=u(e[2],t),r=Math.min(a.length,i.length,n.length);for(let e=0;e<r;++e)s(a.getItem(e),i.getItem(e),n.getItem(e))}setStyle(e,t){t?this.ctx.fillStyle=e:this.ctx.strokeStyle=e}drawStyledCircles(e,t,s){const a=u(e[0],t),i=u(e[1],t),n=u(e[2],t),r=u(e[3],t),o=u(e[4],t),l=Math.min(a.length,i.length,n.length);this.ctx.save();for(let e=0;e<l;++e){const t=3*e,l=`rgba(${r.getItem(t)}, ${r.getItem(t+1)}, ${r.getItem(t+2)}, ${o.getItem(e)})`;this.setStyle(l,s),s?this.fillCircle(a.getItem(e),i.getItem(e),n.getItem(e)):this.strokeCircle(a.getItem(e),i.getItem(e),n.getItem(e))}this.ctx.restore()}drawStyledArcs(e,t,s){const a=u(e[0],t),i=u(e[1],t),n=u(e[2],t),r=u(e[3],t),o=u(e[4],t),l=u(e[5],t),c=u(e[6],t),h=u(e[7],t),d=Math.min(a.length,i.length,n.length,r.length,o.length);this.ctx.save();for(let e=0;e<d;++e){const t=3*e,d=`rgba(${c.getItem(t)}, ${c.getItem(t+1)}, ${c.getItem(t+2)}, ${h.getItem(e)})`;this.setStyle(d,s),s?this.fillArc(a.getItem(e),i.getItem(e),n.getItem(e),r.getItem(e),o.getItem(e),l.getItem(e)):this.strokeArc(a.getItem(e),i.getItem(e),n.getItem(e),r.getItem(e),o.getItem(e),l.getItem(e))}this.ctx.restore()}drawStyledPolygonOrLineSegments(e,t,s,a){const i=e[0],n=u(e[1],t),r=u(e[2],t),o=u(e[3],t),l=u(e[4],t);this.ctx.save();let c=0;for(let e=0;e<i;++e){const t=3*e,i=`rgba(${o.getItem(t)}, ${o.getItem(t+1)}, ${o.getItem(t+2)}, ${l.getItem(e)})`;this.setStyle(i,s);const h=c+2*r.getItem(e);this.ctx.beginPath(),this.ctx.moveTo(n.getItem(c),n.getItem(c+1));for(let e=c+2;e<h;e+=2)this.ctx.lineTo(n.getItem(e),n.getItem(e+1));c=h,a&&this.ctx.closePath(),s?this.ctx.fill():this.ctx.stroke()}this.ctx.restore()}drawPolygonOrLineSegments(e,t,s,a){const i=e[0],n=u(e[1],t),r=u(e[2],t);let o=0;for(let e=0;e<i;++e){const t=o+2*r.getItem(e);this.ctx.beginPath(),this.ctx.moveTo(n.getItem(o),n.getItem(o+1));for(let e=o+2;e<t;e+=2)this.ctx.lineTo(n.getItem(e),n.getItem(e+1));o=t,a&&this.ctx.closePath(),s?this.ctx.fill():this.ctx.stroke()}}strokeLine(e,t){this.ctx.beginPath(),this.ctx.moveTo(e[0],e[1]),this.ctx.lineTo(e[2],e[3]),this.ctx.stroke(),this.ctx.closePath()}strokeLines(e,t){this.ctx.beginPath();const s=u(e[0],t);this.ctx.moveTo(s.getItem(0),s.getItem(1));for(let e=2;e<s.length;e+=2)this.ctx.lineTo(s.getItem(e),s.getItem(e+1));this.ctx.stroke(),this.ctx.closePath()}fillPolygon(e,t){this.ctx.beginPath();const s=u(e[0],t);this.ctx.moveTo(s.getItem(0),s.getItem(1));for(let e=2;e<s.length;e+=2)this.ctx.lineTo(s.getItem(e),s.getItem(e+1));this.ctx.closePath(),this.ctx.fill()}strokePolygon(e,t){this.ctx.beginPath();const s=u(e[0],t);this.ctx.moveTo(s.getItem(0),s.getItem(1));for(let e=2;e<s.length;e+=2)this.ctx.lineTo(s.getItem(e),s.getItem(e+1));this.ctx.closePath(),this.ctx.stroke()}async fillPath(e,t){const[s]=e,a=await(0,n.unpack_models)(s,this.widget_manager);this.ctx.fill(a.value)}async drawImage(e,t){const[s,a,i,r,o]=e,l=await(0,n.unpack_models)(s,this.widget_manager);if(l instanceof k||l instanceof S)this._drawImage(l.canvas,a,i,r,o);else if("ImageModel"==l.get("_model_name")){const e=await v(l);this._drawImage(e,a,i,r,o)}}_drawImage(e,t,s,a,i){void 0===a||void 0===i?this.ctx.drawImage(e,t,s):this.ctx.drawImage(e,t,s,a,i)}async putImageData(e,t){const[s,a]=e,i=await async function(e){let t;const s=new Blob([e],{type:"image/jpeg"});t=URL.createObjectURL(s);const a=new Image;return new Promise((e=>{a.onload=()=>{e(a)},a.src=t}))}(t[0]);this._drawImage(i,s,a)}async setAttr(e,t){"string"==typeof t&&t.startsWith("IPY")&&(t=(await(0,n.unpack_models)(t,this.widget_manager)).value),this.ctx[k.ATTRS[e]]=t}clearCanvas(){this.forEachView((e=>{e.clear()})),this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}executeCommand(e,t=[]){this.ctx[e](...t)}forEachView(e){for(const t in this.views)this.views[t].then((t=>{e(t)}))}resizeCanvas(){this.canvas.setAttribute("width",this.get("width")),this.canvas.setAttribute("height",this.get("height"))}async syncImageData(){if(!this.get("sync_image_data"))return;const e=await g(this.canvas);this.set("image_data",e),this.save_changes()}}k.serializers=Object.assign(Object.assign({},n.DOMWidgetModel.serializers),{_canvas_manager:{deserialize:n.unpack_models},image_data:{serialize:function(e){return new DataView(e.buffer.slice(0))},deserialize:function(e){return null===e?null:new Uint8ClampedArray(e.buffer)}}}),k.ATTRS=["fillStyle","strokeStyle","globalAlpha","font","textAlign","textBaseline","direction","globalCompositeOperation","lineWidth","lineCap","lineJoin","miterLimit","lineDashOffset","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","filter"],k.model_name="CanvasModel",k.model_module=o.o,k.model_module_version=o.Y,k.view_name="CanvasView",k.view_module=o.o,k.view_module_version=o.Y;class x extends k{constructor(){super(...arguments),this.roughFillStyle="hachure",this.roughness=1,this.bowing=1}defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:x.model_name})}initialize(e,t){super.initialize(e,t),this.roughCanvas=new r.O(this.canvas)}fillRect(e,t,s,a){this.roughCanvas.rectangle(e,t,s,a,this.getRoughFillStyle())}strokeRect(e,t,s,a){this.roughCanvas.rectangle(e,t,s,a,this.getRoughStrokeStyle())}fillCircle(e,t,s){this.roughCanvas.circle(e,t,2*s,this.getRoughFillStyle())}strokeCircle(e,t,s){this.roughCanvas.circle(e,t,2*s,this.getRoughStrokeStyle())}strokeLine(e,t){this.roughCanvas.line(e[0],e[1],e[2],e[3],this.getRoughStrokeStyle())}strokeLines(e,t){const s=u(e[0],t),a=[];for(let e=0;e<s.length;e+=2)a.push([s.getItem(e),s.getItem(e+1)]);this.roughCanvas.linearPath(a,this.getRoughStrokeStyle())}async fillPath(e,t){const[s]=e,a=await(0,n.unpack_models)(s,this.widget_manager);this.roughCanvas.path(a.get("value"),this.getRoughFillStyle())}fillArc(e,t,s,a,i,n){const r=2*s,o=n?i:a,l=n?a+2*Math.PI:i;this.roughCanvas.arc(e,t,r,r,o,l,!0,this.getRoughFillStyle())}strokeArc(e,t,s,a,i,n){const r=2*s,o=n?i:a,l=n?a+2*Math.PI:i;this.roughCanvas.arc(e,t,r,r,o,l,!1,this.getRoughStrokeStyle())}fillPolygon(e,t){const s=u(e[0],t),a=[];for(let e=0;e<s.length;e+=2)a.push([s.getItem(e),s.getItem(e+1)]);this.roughCanvas.polygon(a,this.getRoughFillStyle())}strokePolygon(e,t){const s=u(e[0],t),a=[];for(let e=0;e<s.length;e+=2)a.push([s.getItem(e),s.getItem(e+1)]);this.roughCanvas.polygon(a,this.getRoughStrokeStyle())}async setAttr(e,t){x.ROUGH_ATTRS[e]?this[x.ROUGH_ATTRS[e]]=t:await super.setAttr(e,t)}getRoughFillStyle(){const e=this.ctx.fillStyle,t=this.ctx.lineWidth;return{fill:e,fillStyle:this.roughFillStyle,fillWeight:t/2,hachureGap:4*t,curveStepCount:18,strokeWidth:.001,roughness:this.roughness,bowing:this.bowing}}getRoughStrokeStyle(){return{stroke:this.ctx.strokeStyle,strokeWidth:this.ctx.lineWidth,roughness:this.roughness,bowing:this.bowing,curveStepCount:18}}}x.ROUGH_ATTRS=new Array(100).concat(["roughFillStyle","roughness","bowing"]),x.model_name="RoughCanvasModel";class I extends n.DOMWidgetView{render(){this.ctx=m(this.el),this.resizeCanvas(),this.model.on_some_change(["width","height"],this.resizeCanvas,this),this.el.addEventListener("mousemove",{handleEvent:this.onMouseMove.bind(this)}),this.el.addEventListener("mousedown",{handleEvent:this.onMouseDown.bind(this)}),this.el.addEventListener("mouseup",{handleEvent:this.onMouseUp.bind(this)}),this.el.addEventListener("mouseout",{handleEvent:this.onMouseOut.bind(this)}),this.el.addEventListener("touchstart",{handleEvent:this.onTouchStart.bind(this)}),this.el.addEventListener("touchend",{handleEvent:this.onTouchEnd.bind(this)}),this.el.addEventListener("touchmove",{handleEvent:this.onTouchMove.bind(this)}),this.el.addEventListener("touchcancel",{handleEvent:this.onTouchCancel.bind(this)}),this.el.addEventListener("keydown",{handleEvent:this.onKeyDown.bind(this)}),this.el.setAttribute("tabindex","0"),this.updateCanvas()}clear(){this.ctx.clearRect(0,0,this.el.width,this.el.height)}updateCanvas(){this.clear(),this.ctx.drawImage(this.model.canvas,0,0)}resizeCanvas(){this.el.setAttribute("width",this.model.get("width")),this.el.setAttribute("height",this.model.get("height"))}onMouseMove(e){this.model.send(Object.assign({event:"mouse_move"},this.getCoordinates(e)),{})}onMouseDown(e){this.el.focus(),this.model.send(Object.assign({event:"mouse_down"},this.getCoordinates(e)),{})}onMouseUp(e){this.model.send(Object.assign({event:"mouse_up"},this.getCoordinates(e)),{})}onMouseOut(e){this.model.send(Object.assign({event:"mouse_out"},this.getCoordinates(e)),{})}onTouchStart(e){const t=Array.from(e.touches);this.model.send({event:"touch_start",touches:t.map(this.getCoordinates.bind(this))},{})}onTouchEnd(e){const t=Array.from(e.touches);this.model.send({event:"touch_end",touches:t.map(this.getCoordinates.bind(this))},{})}onTouchMove(e){const t=Array.from(e.touches);this.model.send({event:"touch_move",touches:t.map(this.getCoordinates.bind(this))},{})}onTouchCancel(e){const t=Array.from(e.touches);this.model.send({event:"touch_cancel",touches:t.map(this.getCoordinates.bind(this))},{})}onKeyDown(e){e.preventDefault(),e.stopPropagation(),this.model.send({event:"key_down",key:e.key,shift_key:e.shiftKey,ctrl_key:e.ctrlKey,meta_key:e.metaKey},{})}getCoordinates(e){const t=this.el.getBoundingClientRect();return{x:this.el.width*(e.clientX-t.left)/t.width,y:this.el.height*(e.clientY-t.top)/t.height}}get tagName(){return"canvas"}}class S extends n.DOMWidgetModel{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:S.model_name,_model_module:S.model_module,_model_module_version:S.model_module_version,_view_name:S.view_name,_view_module:S.view_module,_view_module_version:S.view_module_version,_canvases:[],sync_image_data:!1,image_data:null,width:700,height:500})}initialize(e,t){super.initialize(e,t),this.canvas=document.createElement("canvas"),this.ctx=m(this.canvas),this.resizeCanvas(),this.on_some_change(["width","height"],this.resizeCanvas,this),this.on("change:_canvases",this.updateCanvasModels.bind(this)),this.on("change:sync_image_data",this.syncImageData.bind(this)),this.updateCanvasModels()}get canvasModels(){return this.get("_canvases")}updateCanvasModels(){for(const e of this.canvasModels)e.on("new-frame",this.updateCanvas,this);this.updateCanvas()}updateCanvas(){this.ctx.clearRect(0,0,this.get("width"),this.get("height"));for(const e of this.canvasModels)this.ctx.drawImage(e.canvas,0,0);this.forEachView((e=>{e.updateCanvas()})),this.syncImageData()}resizeCanvas(){this.canvas.setAttribute("width",this.get("width")),this.canvas.setAttribute("height",this.get("height"))}async syncImageData(){if(!this.get("sync_image_data"))return;const e=await g(this.canvas);this.set("image_data",e),this.save_changes()}forEachView(e){for(const t in this.views)this.views[t].then((t=>{e(t)}))}}S.serializers=Object.assign(Object.assign({},n.DOMWidgetModel.serializers),{_canvases:{deserialize:n.unpack_models},image_data:{serialize:e=>new DataView(e.buffer.slice(0))}}),S.model_name="MultiCanvasModel",S.model_module=o.o,S.model_module_version=o.Y,S.view_name="MultiCanvasView",S.view_module=o.o,S.view_module_version=o.Y;class P extends I{}},147:e=>{e.exports=JSON.parse('{"name":"ipycanvas","version":"0.13.1","description":"Interactive widgets library exposing the browser\'s Canvas API","keywords":["jupyter","jupyterlab","jupyterlab-extension","widgets"],"files":["lib/**/*.js","lib/**/*.d.ts","dist/*.js","dist/*.d.ts","dist/*.map","dist/*.LICENSE.txt"],"homepage":"https://github.com/martinRenou/ipycanvas","bugs":{"url":"https://github.com/martinRenou/ipycanvas/issues"},"license":"BSD-3-Clause","author":{"name":"Martin Renou","email":"martin.renou@gmail.com"},"main":"lib/index.js","types":"./lib/index.d.ts","repository":{"type":"git","url":"https://github.com/martinRenou/ipycanvas"},"scripts":{"build":"yarn run build:lib && yarn run build:nbextension && yarn run build:labextension","build:lib":"tsc","build:nbextension":"webpack","build:labextension":"jupyter labextension build .","build:extensions":"yarn run build && yarn run build:labextension","clean":"yarn run clean:lib && yarn run clean:nbextension && yarn run clean:labextension","clean:lib":"rimraf lib","clean:nbextension":"rimraf ipycanvas/nbextension/static/index.js","clean:labextension":"rimraf ipycanvas/labextension","lint":"yarn prettier && yarn eslint","lint:check":"yarn prettier:check && yarn eslint:check","prettier":"yarn prettier:base --write --list-different","prettier:base":"prettier \\"**/*{.ts,.tsx,.js,.jsx,.css,.json,.md}\\"","prettier:check":"yarn prettier:base --check","prepack":"yarn run build","watch:lib":"tsc -w","watch:nbextension":"webpack --watch"},"dependencies":{"@jupyter-widgets/base":"^2.0.1 || ^3 || ^4 || ^5 || ^6","buffer":"^4.9.2","lodash":">=4.17.13","roughjs":"^4.3.1"},"devDependencies":{"@jupyterlab/builder":"^3.0.0","@lumino/application":"^1.6.0","@lumino/widgets":"^1.6.0","@types/node":"^10.11.6","@types/webpack-env":"^1.13.6","@typescript-eslint/eslint-plugin":"^4.8.1","@typescript-eslint/parser":"^4.8.1","acorn":"^6.2.0","eslint":"^7.3.1","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.4","expect.js":"^0.3.1","fs-extra":"^7.0.0","mkdirp":"^0.5.1","prettier":"^2.0.5","rimraf":"^2.6.2","source-map-loader":"^0.2.4","ts-loader":"^5.2.1","typescript":"~3.8","webpack":"^5","webpack-cli":"^4"},"jupyterlab":{"extension":"lib/plugin","webpackConfig":"webpack.lab.config.js","outputDir":"ipycanvas/labextension","sharedPackages":{"@jupyter-widgets/base":{"bundled":false,"singleton":true}}}}')}}]);